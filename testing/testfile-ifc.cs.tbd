using System;

namespace ClassObject {

  class Dog {
    string breed;

    public void bark() {
      Console.WriteLine("Bark Bark !!");
	   // Complex calculations involving parentheses
        double resultComplex = ((10 + 5) * (20 - 7)) / (8 * 4);
        Console.WriteLine("Complex Calculation: " + resultComplex);
		
             int i = 0;
             while (i < 15)
             {
				// // While loop
				
                 Console.WriteLine("Value of i: " + i);
				 int x = 10;
				// // if (x > 5)
				// // {
					// // Console.WriteLine("x is greater than 5");
				// // }
                 i++;
             }
			
			
    }
	
	public void bark(int a) {
      Console.WriteLine("Bark Bark !!");
	  
            int i = 0;
            while (i < 5)
            {
				// While loop
				
                Console.WriteLine("Value of i: " + i);
				int x = 10;
				// if (x > 5)
				// {
					// Console.WriteLine("x is greater than 5");
				// }
                i++;
            }
			
			while (i < 15)
            {
				// While loop
				
                Console.WriteLine("Value of c: " + i);
				int x = 10;
                i++;
            }
			
			
    }

    // public void methodChains(){
        // var host = new WebHostBuilder()
        // .UseKestrel()
        // .UseContentRoot(Directory.GetCurrentDirectory())
        // .UseStartup<Startup>()
        // .Build();
        // host.Run();
    // }

    // public void SwitchConditionCheck(){
        // age = Convert.ToInt32(Console.ReadLine());	
		// int i =11;
		// // Switch statement
		// int day = 3;
		// switch (day)
		// {
			// case 1:
				// Console.WriteLine("Monday");
				// break;
			// case 2:
				// Console.WriteLine("Tuesday");
				// break;
			// case 3:
				// Console.WriteLine("Wednesday");
				// break;
			// default:
				// Console.WriteLine("Invalid day");
				// break;
		// }
    // }
	
	// public void DoWhileConditionCheck(){        
		 // // Do-while loop
            // int k = 0;
            // do
            // {
                // Console.WriteLine("Value of k: " + k);
                // k++;
            // } while (k < 3);
    // }
	
	// public void WhileLoopConditionCheck(){        
		 // // While loop
            // int i = 0;
            // while (i < 5)
            // {
                // Console.WriteLine("Value of i: " + i);
                // i++;
            // }
    // }
	
	// public void AllInOne(){
		 // // If statement
            // int x = 10;
            // if (x > 5)
            // {
                // Console.WriteLine("x is greater than 5");
            // }

            // // If-else statement
            // int y = 3;
            // if (y % 2 == 0)
            // {
                // Console.WriteLine("y is even");
            // }
            // else
            // {
                // Console.WriteLine("y is odd");
            // }

            // // If-else-if statement
            // int age = 18;
            // if (age < 13)
            // {
                // Console.WriteLine("Child");
            // }
            // else if (age < 20)
            // {
                // Console.WriteLine("Teenager");
            // }
            // else
            // {
                // Console.WriteLine("Adult");
            // }

            // // While loop
            // int i = 0;
            // while (i < 5)
            // {
                // Console.WriteLine("Value of i: " + i);
                // i++;
            // }

            // // For loop
            // for (int j = 0; j < 3; j++)
            // {
                // Console.WriteLine("Value of j: " + j);
            // }

            // // Do-while loop
            // int k = 0;
            // do
            // {
                // Console.WriteLine("Value of k: " + k);
                // k++;
            // } while (k < 3);

            // // Switch statement
            // int day = 3;
            // switch (day)
            // {
                // case 1:
                    // Console.WriteLine("Monday");
                    // break;
                // case 2:
                    // Console.WriteLine("Tuesday");
                    // break;
                // case 3:
                    // Console.WriteLine("Wednesday");
                    // break;
                // default:
                    // Console.WriteLine("Invalid day");
                    // break;
            // }
	// }
	
	// public void ForLoopConditionCheck(){        
		 // // For loop
            // for (int j = 0; j < 3; j++)
            // {
                // Console.WriteLine("Value of j: " + j);
            // }
    // }

    // static void Main(string[] args) {

      // // create Dog object
      // Dog bullDog = new Dog();

      // // access breed of the Dog
      // bullDog.breed = "Bull Dog";
      // Console.WriteLine(bullDog.breed);

      // // access method of the Dog
      // bullDog.bark();

      // int i =1;
      // if (i > 0)
      // {
        // return "";
      // }
      // else if (i == 0)
      // {
        // throw new Exception();
      // }
	  // else
	  // {
		  // return "simple";
	  // }
	  
    // }
	
	// // Method for getting a SQL database connection string
        // public static string GetConnectionString()
        // {
            // string connectionString = "Server=myServerAddress;Database=myDataBase;User Id=myUsername;Password=myPassword;";
            // SqlConnection connection = new SqlConnection(connectionString);

            // try
            // {
                // connection.Open();
                // Console.WriteLine("Connection established successfully.");
            // }
            // catch (SqlException ex)
            // {
                // Console.WriteLine("Error establishing connection: " + ex.Message);
            // }
            // finally
            // {
                // connection.Close();
            // }

            // return connectionString;
        // }
		
		// // Method for making a SOAP web request
        // public static string MakeSoapRequest(string url)
        // {
            // string soapRequest = @"<?xml version=""1.0"" encoding=""utf-8""?>
					// <soap:Envelope xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"">
					  // <soap:Body>
						// <HelloWorld xmlns=""https://example.com/"">
						  // <name>John Doe</name>
						// </HelloWorld>
					  // </soap:Body>
					// </soap:Envelope>";

            // HttpWebRequest request = (HttpWebRequest)WebRequest.Create(url);
            // request.Headers.Add("SOAPAction", "https://example.com/HelloWorld");
            // request.ContentType = "text/xml;charset=\"utf-8\"";
            // request.Accept = "text/xml";
            // request.Method = "POST";

            // byte[] bytes = Encoding.ASCII.GetBytes(soapRequest);
            // request.ContentLength = bytes.Length;
            // Stream requestStream = request.GetRequestStream();
            // requestStream.Write(bytes, 0, bytes.Length);
            // requestStream.Close();

            // HttpWebResponse response = (HttpWebResponse)request.GetResponse();
            // string responseXml;
            // using (StreamReader reader = new StreamReader(response.GetResponseStream()))
            // {
                // responseXml = reader.ReadToEnd();
            // }

            // return responseXml;
        // }

  }
}